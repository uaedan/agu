: -- NADEAU -- 25sp98

### 000116 Modified to include min, max, 1st 2nd and 3rd quartiles.
### using the Devore definition p. 166: [100(ii-.5)/n]th sample %tile.

### 99jn19 Modified to include min and max values in output.

### Routine computes the median of a column
### of numbers given to it.

### int(N/4)

cat $*|\
sort +0 -1n|\
gawk '
BEGIN{
	i=j=flg=0+0
	MED=N=N2=Q1=Q3=N4=N34=0.0+0.0	## MED is Q2
     }
{
#########################
### Body of routine below:
  N++
  lin[N]=$1
}
END{
  ## MIN MAX
    MIN = lin[1]+0.0
    MAX = lin[N]+0.0
  ## Compute MED (Q2 or 2nd quartile)
    N2=int(N/2.0)+0
    if(N2-(N/2.0) == 0.0+0.0){ 	# even number of data
      MED=(lin[N2]+lin[N2+1])/2.0
    }
    else {			# odd number of data
      MED=lin[N2+1]+0.0
    }
   ## Compute Q1  (1st quartile)
      ii1 = (N*25/100) + 0.5	# 25th %ile = (sampl #) + (interpolation fraction, intf)
     smp1 = int(ii1)+0
    intf1 = ii1 - smp1
    intv1 = lin[smp1+1] - lin[smp1]
       Q1 = lin[smp1] + intf1*(intv1)

   ## Compute Q2  (2rd quartile)
      ii2 = (N*50/100) + 0.5	# 50th %ile = (sampl #) + (interpolation fraction, intf)
     smp2 = int(ii2)+0
    intf2 = ii2 - smp2
    intv2 = lin[smp2+1] - lin[smp2]
       Q2 = lin[smp2] + intf2*(intv2)

   ## Compute Q3  (3rd quartile)
      ii3 = (N*75/100) + 0.5	# 75th %ile = (sampl #) + (interpolation fraction, intf)
     smp3 = int(ii3)+0
    intf3 = ii3 - smp3
    intv3 = lin[smp3+1] - lin[smp3]
       Q3 = lin[smp3] + intf3*(intv3)

  ## OUTPUT
#   printf("N: %" "4d  SUM: %" "8.4f  AV1: %9.5f  AV2: %" "9.5f\n",N,SUM1,AV1,AV2)
#   printf("N: %" "4d  N2: %" "8.4f  MIN: %" "9.5f  MED: %9.5f  MAX: %" "9.5f\n",
#           N, N2, MIN, MED, MAX)
#print "Q2: ",Q2
 printf("N: %" "4d  MIN: %" "9.5f  Q1: %" "9.5f  MED: %9.5f  Q3: %" "9.5f  MAX: %" "9.5f  IQR: %" "9.5f\n", N,MIN,Q1,MED,Q3,MAX,(Q3-Q1))
    }'
